Rna:matrix([cos(qa(t)),sin(qa(t)),0],[-sin(qa(t)),cos(qa(t)),0],[0,0,1]);
Rab:matrix([cos(qb(t)),0,-sin(qb(t))],[0,1,0],[sin(qb(t)),0,cos(qb(t))]);
Rbc:matrix([1,0,0],[0,cos(qc(t)),sin(qc(t))],[0,-sin(qc(t)),cos(qc(t))]);
Rcd:matrix([cos(qd(t)),0,-sin(qd(t))],[0,1,0],[sin(qd(t)),0,cos(qd(t))]);

wdn:matrix([0],[diff(qd(t),t)],[0]) + Rcd.matrix([diff(qc(t),t)],[0],[0]) + Rcd.Rbc.matrix([0],[diff(qb(t),t)],[0]) + Rcd.Rbc.Rab.Rna.matrix([0],[0],[diff(qa(t),t)]);
wcn:                           matrix([diff(qc(t),t)],[0],[0]) +     Rbc.matrix([0],[diff(qb(t),t)],[0]) +     Rbc.Rab.Rna.matrix([0],[0],[diff(qa(t),t)]);
wbn:                                                          matrix([0],[diff(qb(t),t)],[0]) +         Rab.Rna.matrix([0],[0],[diff(qa(t),t)]);
wan:                                                                                             Rna.matrix([0],[0],[diff(qa(t),t)]);

T:transpose(wdn).matrix([Id,0,0],[0,Jd,0],[0,0,Id]).wdn/2 + transpose(wcn).matrix([Ic,0,0],[0,Jc,0],[0,0,Kc]).wcn/2 + transpose(wbn).matrix([Ib,0,0],[0,Jb,0],[0,0,Kb]).wbn/2 + transpose(wan).matrix([Ia,0,0],[0,Ja,0],[0,0,Ka]).wan/2;
trigsimp(T),qb(t)=0,diff(qb(t),t)=0;

# Explicit solution of the ODEs describing the 3 DOF Control Moment Gyroscope
# этот лагранжиан выписан для случая заблокированного шарнира qb(t)=0
L:1/2*(Jd*diff(qd(t),t)^2 + (Ic+Id)*diff(qc(t),t)^2 + (Ka+Jc+Jd+Kb - (Jc+Jd-Kc-Id)*cos(qc(t))^2)*diff(qa(t),t)^2) + Jd*diff(qd(t),t)*diff(qa(t),t)*sin(qc(t));



